{"version":3,"file":"static/js/208.864636d3.chunk.js","mappings":"wOAuEA,EA5Da,SAACA,GACV,IAAIC,EAuDJ,OApDIA,EADAD,EAAME,aACIF,EAAME,aAAaC,QAAQC,KAAI,SAACC,GACtC,IAAMC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,MAAOC,EAA2BH,EAA3BG,KAAMC,EAAqBJ,EAArBI,OAAQC,EAAaL,EAAbK,SAE/B,OAEI,UAACC,EAAA,EAAG,CACAV,QAAQ,OACRW,MAAM,QACNC,OAAO,QACPC,SAAS,SACTC,aAAa,SACbC,OAAO,UACPC,UAAU,qEACVC,GAAI,CAAEC,WAAY,mBAAoB,WAGtC,SAACR,EAAA,EAAG,CACAS,KAAK,SACLR,MAAM,OAAM,UAEZ,gBAAKS,IAAKd,EAAOe,IAAKd,OAE1B,UAACG,EAAA,EAAG,CACAS,KAAK,OACLG,SAAS,WACTC,QAAQ,UACRC,MAAM,mBACNxB,QAAQ,OACRyB,cAAc,SAAQ,WAEtB,UAACf,EAAA,EAAG,CAACS,KAAK,SAASnB,QAAQ,OAAOyB,cAAc,SAAQ,WACpD,UAAC,KAAI,CACDC,GAAE,UAAK3B,EAAM4B,MAAI,OAAGtB,GAEpBuB,MAAO,CAAEC,eAAgB,QAAS,oBAC/B,0BAAOtB,IAAY,OAFjBF,IAGT,0BAAOG,QAEX,UAACE,EAAA,EAAG,CAACS,KAAK,SAASnB,QAAQ,OAAOyB,cAAc,SAASK,eAAe,SAAQ,WAC5E,kDACA,0BAAOrB,EAASF,WAEpB,SAACG,EAAA,EAAG,CAACS,KAAK,SAASnB,QAAQ,OAAOyB,cAAc,SAASK,eAAe,gBA5BvEzB,EAiCjB,IAEU,uBAGP,8BAAGL,GAEd,ECiBA,EA/Ca,WAEX,OAAoC+B,EAAAA,EAAAA,UAAS,GAAE,eAAxCC,EAAU,KAAEC,EAAa,KAChC,GAAsCF,EAAAA,EAAAA,YAAuB,eAAtDG,EAAW,KAAEC,EAAc,KAC9BC,EAAG,0DAAsDJ,GAS7D,OANAK,EAAAA,EAAAA,YAAU,YACR,uBAAC,yGACkBC,MAAMF,GAAKG,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IAAC,OAAjDC,EAAI,OACRP,EAAeO,GAAK,0CAFtB,EAIF,GAAG,CAACN,KAEF,iBAAKO,UAAU,OAAM,WACnB,SAACjC,EAAA,EAAG,CACFV,QAAQ,OACR8B,eAAe,SACfc,WAAW,SACXrB,QAAQ,aACRsB,QAAQ,gBACRC,UAAU,oBAAmB,UAI7B,SAACpC,EAAA,EAAG,CAACV,QAAQ,OACX8B,eAAe,SACfc,WAAW,SACXG,SAAS,OACTC,SAAS,SAAQ,SAChBd,IAAe,SAAC,EAAI,CAACP,KAAK,IAAI1B,aAAciC,SAKjD,UAACxB,EAAA,EAAG,CAACV,QAAQ,OAAO8B,eAAe,SAASe,QAAQ,gBAAe,WACjE,SAACI,EAAA,EAAM,CAACC,QAAS,WACfjB,GAAc,SAAAkB,GAAS,OAAIA,EAAY,CAAC,GAC1C,EAAGC,QAAQ,YAAW,mBACtB,SAACH,EAAA,EAAM,CAACC,QAAS,WACfjB,GAAc,SAAAkB,GAAS,OAAIA,EAAY,CAAC,GAC1C,EAAGC,QAAQ,YAAW,uBAI9B,C","sources":["components/Card.tsx","pages/Home/Home.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Box } from \"@mui/material\"\r\nimport { FetchResult } from '../pages/Home/Home'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\ntype CardProps = {\r\n    fetchResults: FetchResult,\r\n    page: any,\r\n}\r\n\r\nconst Card = (props: CardProps) => {\r\n    let display\r\n\r\n    if (props.fetchResults) {\r\n        display = props.fetchResults.results.map((x) => {\r\n            let { id, image, name, status, location } = x;\r\n\r\n            return (\r\n\r\n                <Box\r\n                    display=\"flex\"\r\n                    width=\"600px\"\r\n                    height=\"220px\"\r\n                    overflow=\"hidden\"\r\n                    borderRadius=\"0.5rem\"\r\n                    margin=\"0.75rem\"\r\n                    boxShadow=\"rgb(0 0 0 / 10%) 0px 4px 6px -1px,rgb(0 0 0 / 6%) 0px 2px 4px -1px\"\r\n                    sx={{ background: 'rgb(60, 62, 68)' }}\r\n                    key={id}\r\n                >\r\n                    <Box\r\n                        flex=\"2 1 0%\"\r\n                        width=\"100%\"\r\n                    >\r\n                        <img src={image} alt={name} />\r\n                    </Box>\r\n                    <Box\r\n                        flex=\"3 0%\"\r\n                        position=\"relative\"\r\n                        padding=\"0.75rem\"\r\n                        color=\"rgb(255,255,255)\"\r\n                        display=\"flex\"\r\n                        flexDirection=\"column\"\r\n                    >\r\n                        <Box flex=\"1 1 0%\" display=\"flex\" flexDirection=\"column\">\r\n                            <Link\r\n                                to={`${props.page}${id}`}\r\n                                key={id}\r\n                                style={{ textDecoration: \"none\" }}\r\n                            >      <span>{name}</span>  </Link>\r\n                            <span>{status}</span>\r\n                        </Box>\r\n                        <Box flex=\"1 1 0%\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\r\n                            <h3>Last known location:</h3>\r\n                            <span>{location.name}</span>\r\n                        </Box>\r\n                        <Box flex=\"1 1 0%\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\"></Box>\r\n                    </Box>\r\n                </Box>\r\n\r\n            )\r\n        })\r\n    } else {\r\n        display = \"No characters found\"\r\n    }\r\n\r\n    return <>{display}</>\r\n\r\n}\r\n\r\nexport default Card","import React, { useState, useEffect } from 'react'\r\nimport { Box, Button } from \"@mui/material\"\r\nimport Card from '../../components/Card'\r\n\r\n\r\ninterface Character {\r\n  created: string,\r\n  episode: string[],\r\n  gender: string,\r\n  id: number,\r\n  image: string,\r\n  location: {\r\n    name: string,\r\n    url: string,\r\n  },\r\n  name: string,\r\n  origin: {\r\n    name: string,\r\n    url: string,\r\n  },\r\n  status: string,\r\n  species: string,\r\n  type: string,\r\n  url: string,\r\n}\r\n\r\ninterface Info {\r\n  count: number,\r\n  next: string,\r\n  pages: number,\r\n  prev?: string,\r\n}\r\n\r\nexport interface FetchResult {\r\n  info: Info,\r\n  results: Character[]\r\n}\r\n\r\n\r\nconst Home = () => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const [pageNumber, setPageNumber] = useState(1)\r\n  const [fetchedData, setFetchedData] = useState<FetchResult>()\r\n  let api = `https://rickandmortyapi.com/api/character/?page=${pageNumber}`\r\n\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      let data = await fetch(api).then((res) => res.json())\r\n      setFetchedData(data)\r\n    })();\r\n  }, [api])\r\n  return (\r\n    <div className='home'>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        padding=\"4.5rem 0px\"\r\n        bgcolor=\"rgb(32,35,41)\"\r\n        minHeight=\"calc(50vh - 60px)\"\r\n\r\n      >\r\n\r\n        <Box display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          flexWrap=\"wrap\"\r\n          maxWidth=\"1920px\">\r\n          {fetchedData && <Card page=\"/\" fetchResults={fetchedData} />}\r\n\r\n        </Box>\r\n\r\n      </Box>\r\n      <Box display=\"flex\" justifyContent=\"center\" bgcolor=\"rgb(32,35,41)\">\r\n        <Button onClick={() => {\r\n          setPageNumber(prevValue => prevValue - 1)\r\n        }} variant=\"contained\">Prev</Button>\r\n        <Button onClick={() => {\r\n          setPageNumber(prevValue => prevValue + 1)\r\n        }} variant=\"contained\">Next</Button>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home"],"names":["props","display","fetchResults","results","map","x","id","image","name","status","location","Box","width","height","overflow","borderRadius","margin","boxShadow","sx","background","flex","src","alt","position","padding","color","flexDirection","to","page","style","textDecoration","justifyContent","useState","pageNumber","setPageNumber","fetchedData","setFetchedData","api","useEffect","fetch","then","res","json","data","className","alignItems","bgcolor","minHeight","flexWrap","maxWidth","Button","onClick","prevValue","variant"],"sourceRoot":""}